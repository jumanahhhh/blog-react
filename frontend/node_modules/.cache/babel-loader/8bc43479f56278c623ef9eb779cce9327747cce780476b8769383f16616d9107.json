{"ast":null,"code":"var _jsxFileName = \"/Users/jumanahmaheen/ReactJS/blog/frontend/src/components/scroll/ScrollToTopButton.js\",\n  _s = $RefreshSig$();\n// ScrollToTopButton.js\n\nimport React, { useState, useEffect } from 'react';\nimport './ScrollToTopButton.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Show button when user scrolls down 300px\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  // Scroll to top when button is clicked\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisibility);\n\n    // Clean up event listener\n    return () => {\n      window.removeEventListener('scroll', toggleVisibility);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `scroll-to-top-button ${isVisible ? 'show' : 'hide'}`,\n    onClick: scrollToTop,\n    title: \"Go to top\",\n    children: \"\\u2191\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ScrollToTopButton, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScrollToTopButton","_s","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","scrollToTop","scrollTo","top","behavior","addEventListener","removeEventListener","className","onClick","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jumanahmaheen/ReactJS/blog/frontend/src/components/scroll/ScrollToTopButton.js"],"sourcesContent":["// ScrollToTopButton.js\n\nimport React, { useState, useEffect } from 'react';\nimport './ScrollToTopButton.css'; // Import your CSS file for styling\n\nconst ScrollToTopButton = () => {\n    const [isVisible, setIsVisible] = useState(false);\n\n    // Show button when user scrolls down 300px\n    const toggleVisibility = () => {\n        if (window.pageYOffset > 300) {\n            setIsVisible(true);\n        } else {\n            setIsVisible(false);\n        }\n    };\n\n    // Scroll to top when button is clicked\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', toggleVisibility);\n\n        // Clean up event listener\n        return () => {\n            window.removeEventListener('scroll', toggleVisibility);\n        };\n    }, []);\n\n    return (\n        <button \n            className={`scroll-to-top-button ${isVisible ? 'show' : 'hide'}`}\n            onClick={scrollToTop}\n            title=\"Go to top\"\n        >â†‘\n        </button>\n    );\n};\n\nexport default ScrollToTopButton;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIC,MAAM,CAACC,WAAW,GAAG,GAAG,EAAE;MAC1BH,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACHA,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtBF,MAAM,CAACG,QAAQ,CAAC;MACZC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZQ,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEP,gBAAgB,CAAC;;IAEnD;IACA,OAAO,MAAM;MACTC,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAER,gBAAgB,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IACIc,SAAS,EAAE,wBAAwBX,SAAS,GAAG,MAAM,GAAG,MAAM,EAAG;IACjEY,OAAO,EAAEP,WAAY;IACrBQ,KAAK,EAAC,WAAW;IAAAC,QAAA,EACpB;EACD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAACnB,EAAA,CArCID,iBAAiB;AAAAqB,EAAA,GAAjBrB,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}